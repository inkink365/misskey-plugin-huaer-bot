name: PyPI Publish

on:
  # 当有新的标签推送到仓库时触发
  push:
    tags:
      - '*'
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  publish-to-pypi:
    name: Upload Release to PyPI
    runs-on: ubuntu-latest

    steps:
      # 检出代码到工作区
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # 使用 Python 3.9 版本
          python-version: "3.9"

      # 通过 pip 安装 Poetry
      - name: Install Poetry via pip
        run: python -m pip install poetry

      # 配置 Poetry 环境，不创建虚拟环境
      - name: Configure Poetry environment
        run: poetry config virtualenvs.create false

      # 清除 Poetry 的 PyPI 缓存
      - name: Clear Poetry cache
        run: poetry cache clear --all pypi

      # 安装项目依赖
      - name: Install dependencies
        run: poetry install

      # 构建项目
      - name: Build the project
        run: poetry build

      # 发布项目到 PyPI
      - name: Publish distribution to PyPI
        env:
          # 使用仓库中配置的 PyPI API 令牌
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish